.box{
    width: 100px;
    height: 100px;
    background-color:lightcoral;
    /* background-color는 content, padding 에 적용됨 */
}

/* content 영역 */
.content{
    width: 150px;
    height: 150px;

    /* width, height는 기본적으로 content 영역의 크기 지정 속성 */
}

.border{
    border: 10px solid rebeccapurple;
}

.padding{
    padding: 30px;
    /* content와 border영역 사이 상하좌우를 30px 벌림 */
}

.margin{
    margin: 50px;
    /* 다른 요소와의 간격을 상하좌우 50px 벌림 */

    /* 서로 다른 요소와 margin 영역이 겹칠 경우
        두 영역의 margin의 합 만큼 벌어지지 않고
        둘 중 margin이 큰 요소의 margin이 기준이된다 */

    /* 현재 요소 뿐만 아니라
        감싸고 있는 부모 요소와도 간격이 적용된다. */
}


.padding-test{
    /* padding: 20px; *//* 모든 방향 */
    /* padding: 20px 50px; *//* 상하20 좌우50 */
    /* padding: 30px 40px 50px; *//* 상30 좌우40 하50 */
    /*padding: 30px 20px 30px 50px ;/* 상30 우20 하30 좌50 */

    padding-top: 30px;
    padding-bottom: 30px;
    padding-left: 50px;
    padding-right: 20px;
}

/* border 방향성 테스트 */
.border-test{
    border: 4px solid slateblue;/* 모든 방향 */

    /* border는 방향별로 지정 시 모양/색상을 같이 작성해야 한다 */
    border-top: 1px solid black;

    /* dashed : ------절취선 */
    border-bottom: 5px dashed magenta;
    
    border-left: 6px dotted blue;

    border-right: 5px double rebeccapurple;
}

/* margin : auto 확인 */
.container-1{
    border: 2px solid black;
    width: 470px;
    height: 300px;
}

.margin-auto{
    margin: 100px auto;

    /* margin : auto 
        -> 다른 요소와의 간격을 자동으로 계산해서
            상하, 좌우에 동일한 값을 대입 (가운대로 배치) 
            -> 상하 방향에 auto를 적용해야할 경우
            position 관련 속성이 추가로 필요하다. 
    */
}