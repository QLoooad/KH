

-- 사번 생성 시쿼스 START 223
CREATE SEQUENCE SQE_EMP_ID
START WITH 223 -- 223 시작
INCREMENT BY 1 -- 1씩 증가
NOCYCLE -- 반복 없음
NOCACHE; -- 미리 만들어둔 번호 없음

-- SQE_EMP_ID.NEXTVAL : 다음 번호 생성
-- SQE_EMP_ID.CURRVAL : 현재 번호 조회

UPDATE EMPLOYEE
SET ENT_YN = 'Y',
	ENT_DATE = SYSDATE
WHERE EMP_ID = ?;

SELECT EMP_ID, EMP_NAME, ENT_YN, ENT_DATE 
FROM EMPLOYEE 
WHERE EMP_ID = 223;

SELECT *
FROM EMPLOYEE;
WHERE EMP_ID = 223;


DELETE FROM EMPLOYEE
WHERE EMP_ID = 223;

ROLLBACK;

SELECT * FROM EMPLOYEE 
WHERE EMP_ID = 223;

/*
// 현재 재직중인 사원의
// 사번, 이름, 부서명, 직급명, 급여, 전화번호, 이메일
// 직급코드 오름차순으로 조회
*/

SELECT EMP_ID ,EMP_NAME,DEPT_TITLE ,JOB_NAME,SALARY,PHONE,EMAIL
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
WHERE ENT_YN = 'N'
ORDER BY JOB_CODE DESC;

SELECT EMP_ID ,EMP_NAME, PHONE, EMAIL, ENT_DATE
FROM EMPLOYEE
WHERE ENT_YN = 'Y'
ORDER BY JOB_CODE;

SELECT EMP_ID ,EMP_NAME,DEPT_TITLE ,JOB_NAME,SALARY,PHONE,EMAIL,
		HIRE_DATE, ENT_YN
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
WHERE EMP_ID = 201;

SELECT *
FROM EMPLOYEE;

SELECT EMP_ID ,EMP_NAME ,DEPT_TITLE, HIRE_DATE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
ORDER BY HIRE_DATE DESC;

SELECT *
FROM(SELECT EMP_ID ,EMP_NAME ,DEPT_TITLE, HIRE_DATE
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
ORDER BY HIRE_DATE DESC)
WHERE ROWNUM <= 5;


SELECT DEPT_TITLE, "인원 수", SALARY
FROM (SELECT DEPT_CODE, NVL(DEPT_TITLE, '부서없음') DEPT_TITLE, COUNT(*) "인원 수", AVG(SALARY) SALARY
		FROM EMPLOYEE
		JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
		GROUP BY DEPT_CODE,DEPT_TITLE
		ORDER BY DEPT_CODE DESC);



	
SELECT DEPT_CODE,DEPT_TITLE, COUNT(*), AVG(SALARY) 
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
GROUP BY DEPT_CODE,DEPT_TITLE
ORDER BY DEPT_CODE DESC;





--입력 받은 사원 존재 X = 0
--입력 받은 사원 존재 O, 퇴직 O = 1
--입력 받은 사원 존재 O, 퇴직 X = 2
SELECT *
FROM EMPLOYEE
WHERE 1 = (SELECT COUNT(*) 
				FROM EMPLOYEE
				WHERE EMP_ID = 201)
AND ();


SELECT ENT_YN 
FROM EMPLOYEE
WHERE EMP_ID = 201;

SELECT 
		CASE -- 존재하지 않는 사원?
			WHEN (SELECT COUNT(*) FROM EMPLOYEE WHERE EMP_ID = 222) = 0
			THEN 0
			 -- 존재하지만 퇴직한 사원?
			WHEN (SELECT COUNT(*) FROM EMPLOYEE WHERE EMP_ID = 222 AND ENT_YN = 'Y') = 1
			THEN 1
			 -- 존재 하고 재직 사원
			ELSE 2
		END "CHECK"
FROM DUAL;

SELECT 
		CASE
			WHEN (SELECT COUNT(*) FROM EMPLOYEE WHERE EMP_ID = 222) = 0
			THEN 0
		
			WHEN (SELECT COUNT(*) FROM EMPLOYEE WHERE EMP_ID = 222 AND ENT_YN = 'Y') = 1
			THEN 1
			
			ELSE 2
		END "CHECK"
FROM DUAL;


SELECT COUNT(EMP_ID) 
FROM (SELECT * 
		FROM EMPLOYEE 
		WHERE EMP_ID = '222' AND ENT_YN = 'N'
		UNION ALL
		SELECT * FROM EMPLOYEE WHERE EMP_ID = '222');















